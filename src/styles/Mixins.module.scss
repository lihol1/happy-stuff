@use "sass:math"; //для работы функции math.div

$maxWidth: 1920;
$maxWidthContainer: 1370;
@mixin adaptiveValue($property, $startSize, $minSize, $type : 1, $widthFrom : $maxWidthContainer, $widthTo : 320) {
    $addSize: $startSize - $minSize;
    
    @if $type==1 {
        //срабатывает в границах определенных значений (или от ширины контейнера до минимальной ширины)
        #{$property}: $startSize + px;   
        @media (min-width: #{$widthTo + px}) and (max-width: #{$widthFrom + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{$widthFrom - $widthTo}));
        }
        @media (max-width: #{$widthTo + px}) {
            #{$property}: $minSize + px;
        } 
    } @else if $type==2 {
        //только, если больше контейнера
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        } 
    } @else {
        //всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

@mixin adaptive-font($pcSize, $mobSize) {
    $addSize: $pcSize - $mobSize;
    $addMobSize: $addSize + $addSize * 0.7;
    @media (max-width: 767px) {
        font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
    }
    @media (min-width: 767px) {
        font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
    }
}



@function rem($value) {
    $result: calc($value/16) + rem;
    @return $result;
}


@function em($value1, $value2 : 16) {
    $result: calc($value1/$value2) + em;//делим размер паддинга,марджина на размер шрифта
        @return $result;
}

@function percent($value1, $value2) {    
    $result: math.percentage(math.div($value1, $value2));
    @return $result;
}